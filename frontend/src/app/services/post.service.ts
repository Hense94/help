import {Injectable} from '@angular/core';
import {AngularFirestore, QueryFn} from '@angular/fire/firestore';
import {Observable} from 'rxjs';
import {Post, PostPath} from '../models/post';
import {CommonService} from './common.service';
import {Course} from '../models/course';

@Injectable({
  providedIn: 'root'
})
export class PostService {
  constructor(private afStore: AngularFirestore) { }

  getAllByCourse(course: Course) {
    return this.getMultiple((ref) => {
      return ref
        .where('courseID', '==', course.id)
        .orderBy('created', 'desc');
    });
  }

  public createOrUpdatePost(post: Post): Promise<void> {
    if (!post.id) {
      // New post, get an autogenerated ID
      const id = this.afStore.collection<Post>(PostPath).ref.doc().id;
      delete post.id;
      return this.afStore.collection<Post>(PostPath).doc(id).set(post);
    } else {
      // Post already exists, just update the content
      const id = post.id;
      delete post.id;
      return this.afStore.collection<Post>(PostPath).ref.doc(id).update('content', post.content);
    }
  }

  public deletePost(post: Post): Promise<void> {
    return this.afStore.collection<Post>(PostPath).doc(post.id).delete();
  }

  private getSingle(qFn: QueryFn): Observable<Post> {
    return CommonService.getSingle<Post>(this.afStore, PostPath, qFn);
  }

  private getMultiple(qFn: QueryFn): Observable<Post[]> {
    return CommonService.getMultiple<Post>(this.afStore, PostPath, qFn);
  }
}
