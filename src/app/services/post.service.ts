import { Injectable } from '@angular/core';
import { AuthService } from './auth.service';
import { ToastService } from './toasts.service';
import { AngularFireMessaging } from '@angular/fire/messaging';
import { AngularFirestore, QueryFn } from '@angular/fire/firestore';
import { Observable } from 'rxjs';
import { Post } from '../models/post';
import { map } from 'rxjs/operators';
import {User} from "../models/user";
import { CommonService } from './common.service';

@Injectable({
  providedIn: 'root'
})
export class PostService {
  constructor(private afStore: AngularFirestore) { }

  public getAll(course: String): Observable<Post[]> {
    return this.getMultiple((ref) => {
      return ref.where('course', '==', course).orderBy('created', 'desc');
    })
  }

  public createOrUpdatePost(post: Post): Promise<void> {
    if (!post.id) {
      // New post, get an autogenerated ID
      post.id = this.afStore.collection<Post>('posts').ref.doc().id;
      return this.afStore.collection<Post>('posts').doc(post.id).set(Object.assign({}, post));
    } else {
      // Post already exists, just update the content
      return this.afStore.collection<Post>('posts').ref.doc(post.id).update('content', post.content);
    }
  }

  public deletePost(post: Post): Promise<void> {
    return this.afStore.collection<Post>('posts').doc(post.id).delete();
  }

  private getSingle(qFn: QueryFn): Observable<Post> {
    return CommonService.getSingle<Post>(this.afStore, 'posts', qFn);
  }

  private getMultiple(qFn: QueryFn): Observable<Post[]> {
    return CommonService.getMultiple<Post>(this.afStore, 'posts', qFn);
  }

}
