import { Injectable } from '@angular/core';
import { AuthService } from './auth.service';
import { ToastService } from './toasts.service';
import { AngularFireMessaging } from '@angular/fire/messaging';
import { AngularFirestore } from '@angular/fire/firestore';
import { Observable } from 'rxjs';
import { Post } from '../models/post';
import { map } from 'rxjs/operators';
import {User} from "../models/user";

@Injectable({
  providedIn: 'root'
})
export class PostService {
  constructor(private db: AngularFirestore) { }

  public getPosts(course: String): Observable<Post[]> {
    return this.db.collection<Post>('posts', ref => {
        return ref.where('course', '==', course).orderBy('created', 'desc');
    }).snapshotChanges().pipe(map(actions => {
      return actions.map(a => {
        const data = a.payload.doc.data();
        const id = a.payload.doc.id;
        return {id, ...data};
      });
    }));
  }

  public createOrUpdatePost(post: Post): Promise<void> {
    if (!post.id) {
      // New post, get an autogenerated ID
      post.id = this.db.collection<Post>('posts').ref.doc().id;
      return this.db.collection<Post>('posts').doc(post.id).set(Object.assign({}, post));
    } else {
      // Post already exists, just update the content
      return this.db.collection<Post>('posts').ref.doc(post.id).update('content', post.content);
    }
  }

  public deletePost(post: Post): Promise<void> {
    return this.db.collection<Post>('posts').doc(post.id).delete();
  }
}
